swagger: "2.0"
info:
  title: "BeezUP Backend"
  description: "All backend applications"
  version: "1.0"
  x-logo:
    url: "https://avatars0.githubusercontent.com/u/25665430"
    backgroundColor: "#FFFFFF"
  contact:
    email: "help@beezup.com"
  license:
    name: "BeezUP"
    url: "http://www.beezup.com"
host: "apibackend.beezup.com"
tags:
- name: "Global"
  description: "All global operations"
- name: "UserOrderSubcriptionActor"
  description: "/UserOrderSubcriptionActor - https://api.swaggerhub.com/apis/BeezUP/om_usersubscriptionpusher-actor/1.0"
- name: "OMSubscriptionDatabaseProjector"
  description: "/OMSubscriptionDatabaseProjector - https://api.swaggerhub.com/apis/BeezUP/om_subscription_projector_database/1.0"
x-dependencies:
- group: "OM - Subscription"
  refs:
  - $ref: "https://api.swaggerhub.com/apis/BeezUP/om_usersubscriptionpusher-actor/1.0"
  - $ref: "https://api.swaggerhub.com/apis/BeezUP/om_subscription_projector_database/1.0"
paths:
  /create:
    post:
      summary: "When the merchant wants to subscribe to orders"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/createSubscription"
      responses:
        204:
          description: "OK"
  /activate:
    post:
      summary: "When the merchant wants to activate the subscription to orders"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/activateSubscription"
      responses:
        204:
          description: "OK"
  /deactivate:
    post:
      summary: "When the merchant wants to deactivate the subscription to orders"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/deactivateSubscription"
      responses:
        204:
          description: "OK"
  /delete:
    post:
      summary: "When the merchant wants to delete the subscription to orders"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/deleteSubscription"
      responses:
        204:
          description: "OK"
  /retry:
    post:
      summary: "When the merchant wants to force retry to push subscription to orders"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/retryPushSubscription"
      responses:
        204:
          description: "OK"
  /orders:
    post:
      summary: "The actor will receive orders from the subscription queue"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/ordersReceived"
      responses:
        204:
          description: "OK"
  /HeartBeated:
    post:
      summary: "To ensure that the actor will still be alive when we restart the application that contains the actor"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/heartBeated"
      responses:
        204:
          description: "OK"
  /RetryScheduled:
    post:
      summary: "Will be received when we detect unavailability from the target application"
      tags:
      - "UserOrderSubcriptionActor"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/retryScheduled"
      responses:
        204:
          description: "OK"
  /subscriptionCreated:
    post:
      summary: "When the subscription is created"
      tags:
      - "OMSubscriptionDatabaseProjector"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/subscriptionCreated"
      responses:
        204:
          description: "OK"
  /subscriptionActivated:
    post:
      summary: "When the subscription is activated"
      tags:
      - "OMSubscriptionDatabaseProjector"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/subscriptionActivated"
      responses:
        204:
          description: "OK"
  /subscriptionDeleted:
    post:
      summary: "When the subscription is deleted"
      tags:
      - "OMSubscriptionDatabaseProjector"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/subscriptionDeleted"
      responses:
        204:
          description: "OK"
  /subscriptionDeactivated:
    post:
      summary: "When the subscription is deactivated"
      tags:
      - "OMSubscriptionDatabaseProjector"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/subscriptionDeactivated"
      responses:
        204:
          description: "OK"
  /subscriptionPushRetriedRequested:
    post:
      summary: "When the subscription push retry is requested"
      tags:
      - "OMSubscriptionDatabaseProjector"
      parameters:
      - name: "request"
        in: "body"
        schema:
          $ref: "#/definitions/subscriptionPushRetriedRequested"
      responses:
        204:
          description: "OK"
definitions:
  createSubscription:
    x-format: "Command"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    - "targetUrl"
    - "name"
    - "merchantApplicationName"
    - "merchantApplicationVersion"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      targetUrl:
        $ref: "#/definitions/httpUrl"
      name:
        $ref: "#/definitions/subscriptionName"
      merchantApplicationName:
        $ref: "#/definitions/subscriptionMerchantApplicationName"
      merchantApplicationVersion:
        $ref: "#/definitions/subscriptionMerchantApplicationVersion"
      merchantEmailAlert:
        $ref: "#/definitions/email"
    x-exclude: true
  activateSubscription:
    x-format: "Command"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      recoverBeginPeriodOrderLastModificationUtcDate:
        type: "string"
        format: "date-time"
        description: "If set, the date must be in the past the subscription will recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time."
      recoverEndPeriodOrderLastModificationUtcDate:
        type: "string"
        format: "date-time"
        description: "If end period set, first the date must be in the past, the subscription will recover existing orders using the begin and the end period order last modification date. \nIf end period is not set and the begin period is set, then you will recover existing orders from the past using the begin period last modification date and after than you will continue to receive new/updated orders in real-time.\nIf begin/end period are not set then you will receive new/updated orders in real-time.\nREMARK: The begin period is required if the end period is fulfilled.\nREMARK: If the end period is order last modification date is indicated then once we have push all orders to your target url the subscription will be desactivated.\n"
    x-exclude: true
  deactivateSubscription:
    x-format: "Command"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  deleteSubscription:
    x-format: "Command"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  retryPushSubscription:
    x-format: "Command"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  ordersReceived:
    x-format: "Event"
    type: "object"
    required:
    - "userId"
    - "subscriptionId"
    - "orders"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      orders:
        type: "array"
        minLength: "1"
        items:
          $ref: "#/definitions/beezUPOrder"
    x-exclude: true
  heartBeated:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  retryScheduled:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    - "retryCount"
    - "maxRetryCount"
    - "scheduledRetryUtcDate"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      retryCount:
        type: "integer"
        description: "The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated."
      maxRetryCount:
        type: "integer"
        description: "The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated."
      scheduledRetryUtcDate:
        type: "string"
        format: "date-time"
        description: "The date when the retry will be done"
    x-exclude: true
  subscriptionCreated:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    - "targetUrl"
    - "name"
    - "merchantApplicationName"
    - "merchantApplicationVersion"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      targetUrl:
        $ref: "#/definitions/httpUrl"
      name:
        $ref: "#/definitions/subscriptionName"
      merchantApplicationName:
        $ref: "#/definitions/subscriptionMerchantApplicationName"
      merchantApplicationVersion:
        $ref: "#/definitions/subscriptionMerchantApplicationVersion"
      merchantEmailAlert:
        $ref: "#/definitions/email"
    x-exclude: true
  subscriptionActivated:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    - "secretKey"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
      recoverBeginPeriodOrderLastModificationUtcDate:
        type: "string"
        format: "date-time"
        description: "If set, the date must be in the past the subscription will recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time."
      recoverEndPeriodOrderLastModificationUtcDate:
        type: "string"
        format: "date-time"
        description: "If end period set, first the date must be in the past, the subscription will recover existing orders using the begin and the end period order last modification date. \nIf end period is not set and the begin period is set, then you will recover existing orders from the past using the begin period last modification date and after than you will continue to receive new/updated orders in real-time.\nIf begin/end period are not set then you will receive new/updated orders in real-time.\nREMARK: The begin period is required if the end period is fulfilled.\nREMARK: If the end period is order last modification date is indicated then once we have push all orders to your target url the subscription will be desactivated.\n"
      secretKey:
        type: "string"
        description: "The secret key that will be used to discuss with the target url"
    x-exclude: true
  subscriptionDeleted:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  subscriptionDeactivated:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
  subscriptionPushRetriedRequested:
    x-format: "Event"
    type: "object"
    required:
    - "subscriptionId"
    - "userId"
    properties:
      subscriptionId:
        $ref: "#/definitions/subscriptionId"
      userId:
        $ref: "#/definitions/userId"
    x-exclude: true
